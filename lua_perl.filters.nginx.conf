user www-data;
#user www;

worker_processes 1;
pid /var/run/nginx.pid;

events {
    worker_connections 768;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx-access.log;
    error_log /var/log/nginx-error.log debug;

####perl filter, part 1/2
    perl_set $filter_by_perl "sub { 
        my $r = shift;
        $_ = $r->args;
        s/&/ AND /g;
        s/([a-zA-Z0-9_]+)=([a-zA-Z0-9_+-.,:]+)/$1='$2'/g;
        if(m/([a-zA-Z0-9_]+='[a-zA-Z0-9_+-.,:]+'(?: AND [a-zA-Z0-9_]+='[a-zA-Z0-9_+-.,:]+')*)/g) {
            return 'WHERE '.$1;
        }
        return '';
    }";

    server {
        listen       8880;
        server_name  127.0.0.1;

        pgcopy_server db_pub "host=127.0.0.1 dbname=testdb user=testuser password=123";

####LOAD
        location ~/csv/(?<table>[a-z0-9_]*) {
            pgcopy_query PUT db_pub "COPY $table FROM STDIN WITH DELIMITER ';';";
            pgcopy_query GET db_pub "COPY $table TO STDOUT WITH DELIMITER ';';";
        }

####All url /[perl|lua]/table_name/col1,col2,col3?col5=...
####FILTRATION SAMPLE

####sample of horror without SED syntaxis, part 2/2
        location ~/t/(?<table>[a-z0-9_]*)/(?<columns>\*|[a-zA-Z0-9,_]+) {
            add_header Content-Type "text/plain; charset=UTF-8";
            pgcopy_query GET db_pub 
                "COPY (select $columns FROM $table $fst3) TO STDOUT WITH DELIMITER ';';";
        }

####perl filter, part 2/2
        location ~/perl/(?<table>[a-z0-9_]*)/(?<columns>\*|[a-zA-Z0-9,_]+) {
            add_header Content-Type "text/plain; charset=UTF-8";
            pgcopy_query GET db_pub 
                "COPY (select $columns FROM $table $filter_by_perl) TO STDOUT WITH DELIMITER ';';";
        }

####lua filter, part 1/1
        set $filter_by_lua "";
        location ~/lua/(?<table>[a-z0-9_]*)/(?<columns>\*|[a-zA-Z0-9,_]+) {
            access_by_lua_block {
                local rex = require "rex_pcre"

                local tmp, tmp2, tmp3
                tmp  = string.gsub(ngx.var.args, "&", " AND ");
                tmp2 = string.gsub(tmp, "([%a%d_]+)=([%a%d_+-.,:]+)", "%1='%2'")
                tmp3 = rex.match(tmp2, 
                    "[a-zA-Z0-9_]+='[a-zA-Z0-9_+-.,:]+'(?: AND [a-zA-Z0-9_]+='[a-zA-Z0-9_+-.,:]+')*")

                if string.len(tmp3) > 0 then
                    ngx.var.filter_by_lua = "WHERE " .. tmp2
                end
            }
            add_header Content-Type "text/plain; charset=UTF-8";
            pgcopy_query GET db_pub 
                "COPY (select $columns FROM $table $filter_by_lua) TO STDOUT WITH DELIMITER ';';";
        }
    }
}
