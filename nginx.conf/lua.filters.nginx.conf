user postgres;

worker_processes 1;
pid /var/run/nginx.pid;

events {
    worker_connections 768;
}

http {
    default_type application/octet-stream;

    server {
        listen       8880;
        server_name  127.0.0.1;

        pgcopy_server db_pub "host=127.0.0.1 dbname=testdb user=testuser password=123";

####LOAD
        location ~/csv/(?<table>[a-z0-9_]*) {
            pgcopy_query PUT db_pub "COPY $table FROM STDIN WITH DELIMITER ';';";
            pgcopy_query GET db_pub "COPY $table TO STDOUT WITH DELIMITER ';';";
        }

#you cant use set_by_lua instead access_by_lua_block

####FILTRATION SAMPLE
#/lua/table_name/col1,col2,col3?col5=...

        set $filter_by_lua "";
        location ~/lua/(?<table>[a-z0-9_]*)/(?<columns>\*|[a-zA-Z0-9,_]+) {
            access_by_lua_block {
                if ngx.var.args == nil then
                    return;
                end

                local rex = require "rex_pcre"

                local tmp, tmp2, tmp3
                tmp  = string.gsub(ngx.var.args, "&", " AND ");
                tmp2 = string.gsub(tmp, "([%a%d_]+)=([%a%d_+-.,:]+)", "%1='%2'")
                tmp3 = rex.match(tmp2, 
                    "[a-zA-Z0-9_]+='[a-zA-Z0-9_+-.,:]+'(?: AND [a-zA-Z0-9_]+='[a-zA-Z0-9_+-.,:]+')*")

                if string.len(tmp3) > 0 then
                    ngx.var.filter_by_lua = "WHERE " .. tmp2
                end
            }
            add_header Content-Type "text/plain; charset=UTF-8";
            pgcopy_query GET db_pub 
                "COPY (select $columns FROM $table $filter_by_lua) TO STDOUT WITH DELIMITER ';';";
        }
    }
}
